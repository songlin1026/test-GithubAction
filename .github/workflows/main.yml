# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      # - uses: actions/cache@v2
      #   id: go-cache
      #   with:
      #     path: |
      #       ~/.cache/go-build
      #       ~/.cache/Cypress
      #       ~/go/pkg/mod
      #     key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      #     restore-keys: |
      #       ${{ runner.os }}-go-

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-



      - if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - run: yarn build

      - run: yarn test:unit

      - if: steps.go-cache.outputs.cache-hit != 'true'
        run: go get -v -t -u

      - run: go build

      - run: go test -v

      - run: ./test-githubaction&

      - run: yarn cypress run -e host=http://127.0.0.1:3001 --config video=false

      - run: docker build --pull --rm -f "Dockerfile" -t testgithubaction:latest "."

      - run: docker save testgithubaction:latest -o testgithubaction.tar

      - run: gzip testgithubaction.tar

      - uses: actions/upload-artifact@v2
        with:
          path: testgithubaction.tar.gz
